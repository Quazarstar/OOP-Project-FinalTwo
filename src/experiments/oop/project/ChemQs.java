package experiments.oop.project;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author x14435708
 */
public class ChemQs extends javax.swing.JFrame {
private ArrayList <Question> Cqlist;
private String Canswer;
private int CACount;
private String input;
    /**
     * Creates new form ChemQs
     */
    public ChemQs() {
        initComponents();
         Cqlist = new ArrayList <>();
        Canswer = new String();
        CACount = 0;
       hideRadioButtons();
    }
private void hideRadioButtons(){
    cradio1q1.setVisible(false);
    cradio2q1.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        Csubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        cqField = new javax.swing.JTextArea();
        Cnextq = new javax.swing.JButton();
        DisplayAnsC = new javax.swing.JButton();
        cAns = new javax.swing.JTextField();
        cradio1q1 = new javax.swing.JRadioButton();
        cradio2q1 = new javax.swing.JRadioButton();
        cretry = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(455, 415));

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Csubmit.setText("submit");
        Csubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CsubmitActionPerformed(evt);
            }
        });

        cqField.setEditable(false);
        cqField.setColumns(20);
        cqField.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        cqField.setRows(5);
        cqField.setText("Question 1: what color does \nlitmus paper make when dipped \nin acid?");
        jScrollPane1.setViewportView(cqField);

        Cnextq.setText("next");
        Cnextq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CnextqActionPerformed(evt);
            }
        });

        DisplayAnsC.setText("Display Answers");
        DisplayAnsC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayAnsCActionPerformed(evt);
            }
        });

        cAns.setText("Please enter answer here!");

        cradio1q1.setText("OH- ions");
        cradio1q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cradio1q1ActionPerformed(evt);
            }
        });

        cradio2q1.setText("H+ ions");
        cradio2q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cradio2q1ActionPerformed(evt);
            }
        });

        cretry.setText("retry");
        cretry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cretryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Back)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 171, Short.MAX_VALUE)
                .addComponent(DisplayAnsC)
                .addGap(59, 59, 59)
                .addComponent(Cnextq)
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                                .addComponent(cAns))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cradio2q1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cradio1q1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Csubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cretry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Back)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(cAns, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(cradio1q1)
                .addGap(33, 33, 33)
                .addComponent(cradio2q1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(Csubmit)
                .addGap(12, 12, 12)
                .addComponent(cretry)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cnextq)
                    .addComponent(DisplayAnsC))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        ChemPg myChemPg = new ChemPg();
        myChemPg.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackActionPerformed
int nextChem = 0;
    private void CnextqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CnextqActionPerformed
        // TODO add your handling code here:
        cAns.setText("");
        String cQuestion[] = new String[5];
        cQuestion[1]="Question 2: yes or no answer"
            + "\nDo lemons count as acidic? ";
        cQuestion[2]="Question 3: fill in the gap"
                + "\nacids are ______ donors";
        cQuestion[3]="Question 4:What do bases tast"
                + "\nlike?";
        cQuestion[4]="Question 5: what ions do acids"
                + "\n produce in aqueous solutions";
               nextChem++;
        int Ccount = 0;
while(Ccount <= nextChem){
    if(nextChem==1){
        
    cqField.setText(cQuestion[1]);
    }
    else if(nextChem==2){
    cqField.setText(cQuestion[2]);
    }
    else if(nextChem==3){
    cqField.setText(cQuestion[3]);
    }
    else{
    cAns.setVisible(false);
    Cnextq.setVisible(false);
    Csubmit.setVisible(false);
    cradio1q1.setVisible(true);
    cradio2q1.setVisible(true);
    cqField.setText(cQuestion[4]);
    }
Ccount++;
}
Csubmit.setEnabled(true);
    }//GEN-LAST:event_CnextqActionPerformed

    private void CsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CsubmitActionPerformed
        cretry.setEnabled(true);
        Canswer = cAns.getText();
        
        Question q = new Question();
        q.setAnswer(Canswer);
        
        //add object to arraylist
        Cqlist.add(q);
        
        CACount++;
        Csubmit.setEnabled(false);
    }//GEN-LAST:event_CsubmitActionPerformed

    private void DisplayAnsCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayAnsCActionPerformed
        // TODO add your handling code here:
        int confirmAns = 0;   
        int number = 0;
        
        String confirm[] = new String[2];
        confirm[0] = "Correct!";
        confirm[1] = "incorrect";
        
        String Correct[] = new String[4];
        Correct[0]= "red";
        Correct[1]= "yes";
        Correct[2]="proton";
        Correct[3]="bitter";
       
        for(int i = 0; i < Cqlist.size();i++){
            if(Cqlist.get(i).getAnswer().equals(Correct[i])){
             confirmAns = 0;
            }
            else{
            confirmAns = 1;
            }
            number++;
            JOptionPane.showMessageDialog(null,"for question "+number+" your answer is: "+ Cqlist.get(i).getAnswer()+" It is "+confirm[confirmAns]+" The correct answer is: "+Correct[i]);
        }
           if(radioAns==1){
        JOptionPane.showMessageDialog(null,"You chose the first answer and it is incorrect");
        }
        else if(radioAns==2){
        JOptionPane.showMessageDialog(null,"You chose the second answer and it is correct");
        }
        else{
        JOptionPane.showMessageDialog(null,"you havnt dont the question yet");
        }
        
    }//GEN-LAST:event_DisplayAnsCActionPerformed
int radioAns = 0;
    private void cradio1q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cradio1q1ActionPerformed
        // TODO add your handling code here:
         cradio1q1.setEnabled(false);
        cradio2q1.setEnabled(false);
        
        radioAns = 1;
    }//GEN-LAST:event_cradio1q1ActionPerformed

    private void cradio2q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cradio2q1ActionPerformed
        // TODO add your handling code here:
         cradio1q1.setEnabled(false);
        cradio2q1.setEnabled(false);
        
        radioAns = 2;
    }//GEN-LAST:event_cradio2q1ActionPerformed

    private void cretryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cretryActionPerformed
        // TODO add your handling code here:
                 input = cAns.getText();
        Csubmit.setEnabled(true);
        for(int i = 0; i< Cqlist.size(); i++){
        if(Cqlist.get(i).getAnswer().equals(input)){
        Cqlist.remove(i);
        CACount = CACount -1;
        }       
        }
        cAns.setText("");
        cretry.setEnabled(false);
    }//GEN-LAST:event_cretryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChemQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChemQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChemQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChemQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChemQs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Cnextq;
    private javax.swing.JButton Csubmit;
    private javax.swing.JButton DisplayAnsC;
    private javax.swing.JTextField cAns;
    private javax.swing.JTextArea cqField;
    private javax.swing.JRadioButton cradio1q1;
    private javax.swing.JRadioButton cradio2q1;
    private javax.swing.JButton cretry;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
