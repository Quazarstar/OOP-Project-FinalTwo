package experiments.oop.project;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author x14435708
 */
public class PhysQs extends javax.swing.JFrame {
private ArrayList <Question> Pqlist;
private String Panswer;
private int PACount;
private String input;
    /**
    /**
     * Creates new form PhysQs
     */
    public PhysQs() {
        initComponents();
        Pqlist = new ArrayList <>();
        Panswer = new String();
        PACount = 0;
        hideRadioButtons();
    }
private void hideRadioButtons(){
    pradio1q1.setVisible(false);
    pradio2q1.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        Psubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pqField = new javax.swing.JTextArea();
        Pnextq = new javax.swing.JButton();
        DisplayAnsP = new javax.swing.JButton();
        pAns = new javax.swing.JTextField();
        pradio1q1 = new javax.swing.JRadioButton();
        pradio2q1 = new javax.swing.JRadioButton();
        pretry = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(455, 415));

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Psubmit.setText("submit");
        Psubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PsubmitActionPerformed(evt);
            }
        });

        pqField.setEditable(false);
        pqField.setColumns(20);
        pqField.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        pqField.setRows(5);
        pqField.setText("__________ is the change in \ndirection of a beam of light when \nit enters from one medium to \nanother.");
        jScrollPane1.setViewportView(pqField);

        Pnextq.setText("next");
        Pnextq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PnextqActionPerformed(evt);
            }
        });

        DisplayAnsP.setText("Display Answers");
        DisplayAnsP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayAnsPActionPerformed(evt);
            }
        });

        pAns.setText("Please enter answer here!");

        pradio1q1.setText("light bends when entering from one medium to another");
        pradio1q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pradio1q1ActionPerformed(evt);
            }
        });

        pradio2q1.setText("light bounces off surfaces");
        pradio2q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pradio2q1ActionPerformed(evt);
            }
        });

        pretry.setText("retry");
        pretry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pretryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(171, Short.MAX_VALUE)
                .addComponent(DisplayAnsP)
                .addGap(80, 80, 80)
                .addComponent(Pnextq)
                .addGap(36, 36, 36))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Back)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pAns)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                            .addComponent(pradio1q1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pradio2q1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Psubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pretry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Back)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(pAns, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pradio1q1)
                .addGap(34, 34, 34)
                .addComponent(pradio2q1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(Psubmit)
                .addGap(18, 18, 18)
                .addComponent(pretry)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pnextq)
                    .addComponent(DisplayAnsP))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        PhysPg myPhysPg = new PhysPg();
        myPhysPg.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackActionPerformed
int nextPhys =0;
    private void PnextqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PnextqActionPerformed
        // TODO add your handling code here:
        pAns.setText("");
        String pQuestion[] = new String[5];
        pQuestion[1]="Question 2: complete the sentence:"
                + "\nWhen light hits a _____"
                + "\n medium...";
        pQuestion[2]="Question 3: If you dip a pencil "
                + "\nin water you will see\n it ______. ";
        pQuestion[3]="Question 4: what is used to show"
                + "\nthat white light is a "
                + "\nspectrum of colors?";
        pQuestion[4]="Question 5: refraction is when "
                + "_____";
       nextPhys++;
        int Pcount = 0;
while(Pcount <= nextPhys){
    if(nextPhys==1){
    
    pqField.setText(pQuestion[1]);
    }
    else if(nextPhys==2){
    pqField.setText(pQuestion[2]);
    }
    else  if(nextPhys==3){
    pqField.setText(pQuestion[3]);        
    }
    else{
            pAns.setVisible(false);
    Pnextq.setVisible(false);
    Psubmit.setVisible(false);
    pradio1q1.setVisible(true);
    pradio2q1.setVisible(true);
    pqField.setText(pQuestion[4]);
    }

Pcount++;
}

Psubmit.setEnabled(true);
    }//GEN-LAST:event_PnextqActionPerformed

    private void PsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PsubmitActionPerformed
        // TODO add your handling code here:
        pretry.setEnabled(true);
          Panswer = pAns.getText();
        
        Question q = new Question();
        q.setAnswer(Panswer);
        
        //add object to arraylist
        Pqlist.add(q);
        
        PACount++;
        Psubmit.setEnabled(false);
    }//GEN-LAST:event_PsubmitActionPerformed

    private void DisplayAnsPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayAnsPActionPerformed
        // TODO add your handling code here:
          int confirmAns = 0; 
            int number = 0;
        String confirm[] = new String[2];
        confirm[0] = "Correct!";
        confirm[1] = "incorrect";
        
        String Correct[] = new String[4];
        Correct[0]= "refraction";
        Correct[1]= "thicker";
        Correct[2]= "bend";
        Correct[3]= "prism";
        for(int i = 0; i < Pqlist.size();i++){
            if(Pqlist.get(i).getAnswer().equals(Correct[i])){
             confirmAns = 0;
            }
            else{
            confirmAns = 1;
            }
            number++;
            JOptionPane.showMessageDialog(null,"for question "+number+" your answer is: "+ Pqlist.get(i).getAnswer()+" It is "+confirm[confirmAns]+" The correct answer is: "+Correct[i]);
        }
            if(radioAns==1){
        JOptionPane.showMessageDialog(null,"You chose the first answer and it is correct");
        }
        else if(radioAns==2){
        JOptionPane.showMessageDialog(null,"You chose the second answer and it is incorrect");
        }
        else{
        JOptionPane.showMessageDialog(null,"you havnt dont the question yet");
        }
    }//GEN-LAST:event_DisplayAnsPActionPerformed
int radioAns = 0;
    private void pradio1q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pradio1q1ActionPerformed
        // TODO add your handling code here:
                pradio1q1.setEnabled(false);
        pradio2q1.setEnabled(false);
        
        radioAns = 1;
    }//GEN-LAST:event_pradio1q1ActionPerformed

    private void pradio2q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pradio2q1ActionPerformed
        // TODO add your handling code here:
                       pradio1q1.setEnabled(false);
        pradio2q1.setEnabled(false);
        
        radioAns = 2;
    }//GEN-LAST:event_pradio2q1ActionPerformed

    private void pretryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pretryActionPerformed
        // TODO add your handling code here:
         input = pAns.getText();
        Psubmit.setEnabled(true);
        for(int i = 0; i< Pqlist.size(); i++){
        if(Pqlist.get(i).getAnswer().equals(input)){
        Pqlist.remove(i);
        PACount = PACount -1;
        }       
        }
        pAns.setText("");
        pretry.setEnabled(false);
    }//GEN-LAST:event_pretryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhysQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhysQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhysQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhysQs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhysQs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton DisplayAnsP;
    private javax.swing.JButton Pnextq;
    private javax.swing.JButton Psubmit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pAns;
    private javax.swing.JTextArea pqField;
    private javax.swing.JRadioButton pradio1q1;
    private javax.swing.JRadioButton pradio2q1;
    private javax.swing.JButton pretry;
    // End of variables declaration//GEN-END:variables
}
